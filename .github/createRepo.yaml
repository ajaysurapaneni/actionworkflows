name: Scaffold a new service
on:
  workflow_dispatch:
    inputs:
      port_payload:
        required: true
        description: "Port's payload, including details for who triggered the action and general context (blueprint, run id, etc...)"
        type: string
    secrets:
      ORG_ADMIN_TOKEN:
        required: true
      PORT_CLIENT_ID:
        required: true
      PORT_CLIENT_SECRET:
        required: true
jobs:
  scaffold-service:
    runs-on: ubuntu-latest
    steps:
      - uses: port-labs/cookiecutter-gha@v1.1
        id: scaff
        with:
          portClientId: ${{ secrets.PORT_CLIENT_ID }}
          portClientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          token: ${{ secrets.ORG_ADMIN_TOKEN }}
          portRunId: ${{ fromJson(inputs.port_payload).context.runId }}
          repositoryName: ${{ fromJson(inputs.port_payload).payload.properties.service_name }}
          portUserInputs: '{"cookiecutter_app_name": "${{ fromJson(inputs.port_payload).payload.properties.service_name }}" }'
          cookiecutterTemplate: https://github.com/ajaysurapaneni/python-flask-sample-app
          blueprintIdentifier: "service"
          organizationName: ${{ env.GITHUB_REPOSITORY_OWNER }}

      - name: "Report deployment Entity to port ðŸš¢"
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          identifier: ${{ fromJson(inputs.port_payload).payload.properties.service_name }}
          blueprint: service
          properties: |
            {
              "url": "https://github.com/${{ env.GITHUB_REPOSITORY_OWNER }}/${{ fromJson(inputs.port_payload).payload.properties.service_name }}",
              "language": "python"
            }
      
      - uses: port-labs/cookiecutter-gha@v1.1
        id: scaff
        with:
          portClientId: ${{ secrets.PORT_CLIENT_ID }}
          portClientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          token: ${{ secrets.ORG_ADMIN_TOKEN }}
          portRunId: ${{ fromJson(inputs.port_payload).context.runId }}
          repositoryName: ${{ fromJson(inputs.port_payload).payload.properties.service_chart_name }}
          portUserInputs: '{"cookiecutter_app_name": "${{ fromJson(inputs.port_payload).payload.properties.service_chart_name }}" }'
          cookiecutterTemplate: https://github.com/ajaysurapaneni/python-sample-helm-chart
          blueprintIdentifier: "service"
          organizationName: ${{ env.GITHUB_REPOSITORY_OWNER }}

      - name: "Report deployment Entity to port ðŸš¢"
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          identifier: ${{ fromJson(inputs.port_payload).payload.properties.service_chart_name }}
          blueprint: service
          properties: |
            {
              "url": "https://github.com/${{ env.GITHUB_REPOSITORY_OWNER }}/${{ fromJson(inputs.port_payload).payload.properties.service_chart_name }}",
              "language": "AmazonEks"
            }

